// <auto-generated />
using DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataBase.Migrations
{
    [DbContext(typeof(AplicationsContext))]
    partial class AplicationsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataBase.Models.PokemonRegions", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("pokemonRegionsName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("PokemonRegions", (string)null);
                });

            modelBuilder.Entity("DataBase.Models.Pokemons", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("TypePrimaryPokemonId")
                        .HasColumnType("int");

                    b.Property<int>("TypeSecondaryPokemonId")
                        .HasColumnType("int");

                    b.Property<string>("pokemonImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pokemonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pokemonRegionId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("TypePrimaryPokemonId");

                    b.HasIndex("TypeSecondaryPokemonId");

                    b.HasIndex("pokemonRegionId");

                    b.ToTable("Pokemons", (string)null);
                });

            modelBuilder.Entity("DataBase.Models.TypesPokemons", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("typeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("TypesPokemons", (string)null);
                });

            modelBuilder.Entity("DataBase.Models.Pokemons", b =>
                {
                    b.HasOne("DataBase.Models.TypesPokemons", "typesPrimaryPokemons")
                        .WithMany("pokemons")
                        .HasForeignKey("TypePrimaryPokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBase.Models.TypesPokemons", "typesSecondaryPokemons")
                        .WithMany()
                        .HasForeignKey("TypeSecondaryPokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBase.Models.PokemonRegions", "pokemonRegions")
                        .WithMany("pokemons")
                        .HasForeignKey("pokemonRegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pokemonRegions");

                    b.Navigation("typesPrimaryPokemons");

                    b.Navigation("typesSecondaryPokemons");
                });

            modelBuilder.Entity("DataBase.Models.PokemonRegions", b =>
                {
                    b.Navigation("pokemons");
                });

            modelBuilder.Entity("DataBase.Models.TypesPokemons", b =>
                {
                    b.Navigation("pokemons");
                });
#pragma warning restore 612, 618
        }
    }
}
